version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: orion_nexus_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: orion_nexus
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - orion_nexus_network

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: orion_nexus_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - orion_nexus_network
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: orion_nexus_backend
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/orion_nexus?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - AES_SECRET_KEY=your-aes-secret-key-change-in-production
      - DEBUG=False
      - BACKEND_CORS_ORIGINS=["http://localhost:3000"]
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    networks:
      - orion_nexus_network
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: orion_nexus_celery_worker
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/orion_nexus?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - AES_SECRET_KEY=your-aes-secret-key-change-in-production
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - mongodb
      - redis
    networks:
      - orion_nexus_network
    volumes:
      - ./backend:/app
    command: celery -A tasks.celery_app worker --loglevel=info

  # Celery Beat Scheduler
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: orion_nexus_celery_beat
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/orion_nexus?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-change-in-production
      - AES_SECRET_KEY=your-aes-secret-key-change-in-production
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - mongodb
      - redis
    networks:
      - orion_nexus_network
    volumes:
      - ./backend:/app
      - celery_beat_data:/app/celerybeat-schedule
    command: celery -A tasks.celery_app beat --loglevel=info

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: orion_nexus_frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_AES_SECRET_KEY=your-aes-secret-key-change-in-production
      - NEXT_PUBLIC_APP_NAME=Orion Nexus
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - orion_nexus_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: orion_nexus_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - orion_nexus_network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  celery_beat_data:
    driver: local

networks:
  orion_nexus_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16